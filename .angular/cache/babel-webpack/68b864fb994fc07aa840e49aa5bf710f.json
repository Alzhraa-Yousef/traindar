{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\"; //import 'rxjs/add/operator/catch';\n\nexport let UserServiseService = /*#__PURE__*/(() => {\n  class UserServiseService {\n    constructor(_http) {\n      this._http = _http; //_url1=\"https://jsonplaceholder.typicode.com/users\"; \n\n      this._urlRegister = \"https://train-dar.azurewebsites.net/api/v1/registration\";\n      this._urlLogin = \"https://train-dar.azurewebsites.net/api/v1/sign-in\";\n      this._urlprofile = \"https://train-dar.azurewebsites.net/api/v1/user/\";\n    } // GetUsrInformation():Observable<Userregister[]>{\n    //   return this._http.get<Userregister[]>(this._url1)\n    //   .pipe(catchError(err=>{return throwError(err.msg)}));\n    // }\n\n\n    PostUsrInformation(data) {\n      return this._http.post(this._urlRegister, data).pipe(catchError(err => {\n        return throwError(err.error.message);\n      }));\n    }\n\n    PostLoginrInformation(data) {\n      return this._http.post(this._urlLogin, data).pipe(catchError(err => {\n        return throwError(err.error.message);\n      })); //'Email or password is incorrect'\n    }\n\n    GetUsrInformation(id) {\n      return this._http.get(this._urlprofile + id).pipe(catchError(err => {\n        return throwError(err.error.message);\n      }));\n    }\n\n  }\n\n  UserServiseService.ɵfac = function UserServiseService_Factory(t) {\n    return new (t || UserServiseService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserServiseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserServiseService,\n    factory: UserServiseService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserServiseService;\n})();","map":null,"metadata":{},"sourceType":"module"}