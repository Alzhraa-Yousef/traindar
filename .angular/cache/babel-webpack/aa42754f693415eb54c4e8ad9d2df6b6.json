{"ast":null,"code":"import { Location } from '../shared/train';\nimport Swal from 'sweetalert2';\nimport 'sweetalert2/src/sweetalert2.scss';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servises/train.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../headerafter/headerafter.component\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../footerafter/footerafter.component\";\n\nfunction SearchtrainIDComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const TrainID_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(TrainID_r2);\n  }\n}\n\nfunction SearchtrainIDComponent_p_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1, \"Please select TrainID\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let SearchtrainIDComponent = /*#__PURE__*/(() => {\n  class SearchtrainIDComponent {\n    constructor(elementRef, trainID, router) {\n      this.elementRef = elementRef;\n      this.trainID = trainID;\n      this.router = router; //train:TRain=new TRain(111111,27.180134,31.189283,'up','VIP');\n\n      this.trainLocation = new Location(27.180134, 31.189283);\n      this.zoom = 10;\n    }\n\n    ngOnInit() {\n      this.session = localStorage.getItem('UserID');\n\n      if (this.session == '') {\n        this.router.navigate(['loginform']);\n      } else {\n        //httpget to get Trainidlist for selectoptions\n        this.trainID.GetTrainIDList().subscribe(response => {\n          this.trainIDList = response;\n        }, error => {\n          console.log(error);\n          this.errorMessageID = error; //  Swal.fire({\n          //        title: 'Error',\n          //        html: this.errorMessageID,\n          //        iconHtml: '<img src=\"../../assets/error.png\">',\n          //        background:'#DFD1A2',\n          //        showCancelButton: true,\n          //        confirmButtonColor: '#F6BC00',\n          //        cancelButtonColor: '#F6BC00',\n          //        cancelButtonText:'No',\n          //        confirmButtonText: 'Yes',\n          //        width:400, })\n        });\n      }\n    }\n\n    Send() {\n      var selectedIDMenu = this.elementRef.nativeElement.querySelector('#trainIDMenu');\n      var selectedID = selectedIDMenu.options[selectedIDMenu.selectedIndex].text;\n\n      if (selectedID == \"Select train ID\") {\n        console.log(\"no\");\n        this.mapFlag = false;\n        this.selectFlag = true;\n      } else {\n        //httpget to get latlng\n        this.selectFlag = false;\n        this.mapFlag = true;\n        this.elementRef.nativeElement.querySelector('#brr').innerHTML = \"<br><br><br>\"; //httpget to get TrainiLatLng for map\n\n        this.trainID.GetTrainLocation(selectedID, this.session).subscribe(response => {\n          this.trainLocation = response;\n        }, error => {\n          console.log(error);\n          this.errorMessageLatLng = error;\n          console.log(error); //if(typeof this.errorMessageLatLng == 'undefined' ) { } \n\n          Swal.fire({\n            title: 'Error',\n            html: this.errorMessageLatLng,\n            iconHtml: '<img src=\"../../assets/error.png\">',\n            //background:'#DFD1A2',\n            showCancelButton: true,\n            confirmButtonColor: '#F6BC00',\n            cancelButtonColor: '#F6BC00',\n            cancelButtonText: 'No',\n            confirmButtonText: 'Yes',\n            width: 400\n          });\n        }, () => {\n          this.MapGoogleCode();\n        }); //this.showLocationonLeaflet();\n      }\n    }\n\n    clickedMarker() {\n      this.zoom++;\n    }\n\n    MapGoogleCode() {\n      const myLatlng = {\n        lat: this.trainLocation.locationLat,\n        lng: this.trainLocation.locationLng\n      };\n      let x = 13;\n      const map = new google.maps.Map(document.getElementById(\"map\"), {\n        zoom: 13,\n        center: myLatlng\n      });\n      const marker = new google.maps.Marker({\n        position: myLatlng,\n        map,\n        title: \"Click to zoom\"\n      });\n      map.addListener(\"center_changed\", () => {\n        // 3 seconds after the center of the map has changed, pan back to the\n        // marker.\n        window.setTimeout(() => {\n          map.panTo(marker.getPosition());\n        }, 3000);\n      });\n      marker.addListener(\"click\", () => {\n        map.zoom++;\n        map.setCenter(marker.getPosition()); //as google.maps.LatLng\n      });\n    }\n\n    showLocationonLeaflet() {\n      //for leaflet amp\n      let mymap = new L.map('map').setView([this.trainLocation.lat, this.trainLocation.lng], 13);\n      L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        maxZoom: 18,\n        id: 'mapbox/streets-v11',\n        tileSize: 512,\n        zoomOffset: -1,\n        accessToken: 'pk.eyJ1IjoiYWx6aHJhYXlvdXNlZiIsImEiOiJjbDBpcjIyN3gwNTkyM2ltcmUzamI4NGRnIn0.bZacRNNLNh0n9yjML7KTWA'\n      }).addTo(mymap);\n      let marker = L.marker([this.trainLocation.lat, this.trainLocation.lng]).addTo(mymap);\n      marker.bindPopup(\"<b>hello</b>\").openPopup();\n      let popup = L.popup().setLatLng([this.trainLocation.lat, this.trainLocation.lng]).setContent(\"I am a Train .\").openOn(mymap);\n    }\n\n    watchLocation() {\n      let deslat = 0;\n      let deslng = 0;\n      let id = navigator.geolocation.watchPosition(position => {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        console.log(longitude, ' :', latitude);\n\n        if (latitude === deslat) {\n          navigator.geolocation.clearWatch(id);\n        } //وصلت الى الموقع المقصود \n\n      }, error => {\n        console.log(error.code);\n        const {\n          code\n        } = error;\n\n        switch (code) {\n          case GeolocationPositionError.TIMEOUT:\n            // Handle timeout.\n            break;\n\n          case GeolocationPositionError.PERMISSION_DENIED:\n            // User denied the request.\n            break;\n\n          case GeolocationPositionError.POSITION_UNAVAILABLE:\n            // Position not available.\n            break;\n        }\n      }, {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      });\n    }\n\n  }\n\n  SearchtrainIDComponent.ɵfac = function SearchtrainIDComponent_Factory(t) {\n    return new (t || SearchtrainIDComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.TrainService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  SearchtrainIDComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchtrainIDComponent,\n    selectors: [[\"app-searchtrain-id\"]],\n    decls: 34,\n    vars: 2,\n    consts: [[1, \"row\", \"row1\"], [1, \"col-md-12\", \"d-flex\", \"justify-content-center\"], [\"name\", \"trainIDMenu\", \"id\", \"trainIDMenu\", \"aria-label\", \"Default select example\", 1, \"form-select\"], [\"selected\", \"\", \"disabled\", \"\"], [\"value\", \"TrainID\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"row2\"], [1, \"btn\", \"btn2\", 3, \"click\"], [1, \"row\", \"row2\", \"mt-2\"], [\"style\", \"color: red;font-size:18px;\", 4, \"ngIf\"], [1, \"row\", \"row3\"], [\"id\", \"map\"], [\"id\", \"brr\"], [\"value\", \"TrainID\"], [2, \"color\", \"red\", \"font-size\", \"18px\"]],\n    template: function SearchtrainIDComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-headerafter\");\n        i0.ɵɵelement(1, \"br\");\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelement(3, \"br\");\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelementStart(8, \"div\", 0);\n        i0.ɵɵelementStart(9, \"div\", 1);\n        i0.ɵɵelementStart(10, \"select\", 2);\n        i0.ɵɵelementStart(11, \"option\", 3);\n        i0.ɵɵtext(12, \" Select train ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, SearchtrainIDComponent_option_13_Template, 2, 1, \"option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 5);\n        i0.ɵɵelementStart(15, \"div\", 1);\n        i0.ɵɵelementStart(16, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function SearchtrainIDComponent_Template_button_click_16_listener() {\n          return ctx.Send();\n        });\n        i0.ɵɵtext(17, \"Get Location\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 7);\n        i0.ɵɵelementStart(19, \"div\", 1);\n        i0.ɵɵtemplate(20, SearchtrainIDComponent_p_20_Template, 2, 0, \"p\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 9);\n        i0.ɵɵelementStart(22, \"div\", 1);\n        i0.ɵɵelement(23, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 11);\n        i0.ɵɵelement(25, \"br\");\n        i0.ɵɵelement(26, \"br\");\n        i0.ɵɵelement(27, \"br\");\n        i0.ɵɵelement(28, \"br\");\n        i0.ɵɵelement(29, \"br\");\n        i0.ɵɵelement(30, \"br\");\n        i0.ɵɵelement(31, \"br\");\n        i0.ɵɵelement(32, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"app-footerafter\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.trainIDList);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectFlag);\n      }\n    },\n    directives: [i3.HeaderafterComponent, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i5.NgForOf, i5.NgIf, i6.FooterafterComponent],\n    styles: [\".btn2[_ngcontent-%COMP%]{background-color:#eaca60;border-radius:25px;width:200px;margin-top:10px}#trainIDMenu[_ngcontent-%COMP%]{width:320px;border-radius:20px}.row1[_ngcontent-%COMP%], .row2[_ngcontent-%COMP%], .row3[_ngcontent-%COMP%]{top:40%;left:40%}agm-map[_ngcontent-%COMP%], #map[_ngcontent-%COMP%]{margin-top:22px;height:400px;width:85%}\"]\n  });\n  return SearchtrainIDComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}